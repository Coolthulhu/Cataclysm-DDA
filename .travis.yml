# this file is HEAVILY influenced by https://github.com/boostorg/hana/blob/master/.travis.yml

sudo: false
dist: trusty
language: c++

cache: ccache

# Disabled for now
#notifications:
#  email: false
#  irc: "irc.freenode.org#Cataclysm-DDA"
#  use_notice: true
#  skip_join: true

git:
  depth: 5

env:
  global:
  # Workaround for https://github.com/travis-ci/travis-ci/issues/4681
  # "Defining the build matrix only with matrix.include leads to an additional, unwanted job"
  matrix:
    - TRAVIS_EMPTY_JOB_WORKAROUND=true

addons:
  # these apt sources will be referenced later (by using *name)
  apt:
    sources: &apt_sources
      - ubuntu-toolchain-r-test
      - llvm-toolchain-precise
      - llvm-toolchain-precise-3.5
      - llvm-toolchain-precise-3.6
      - llvm-toolchain-precise-3.7
      - llvm-toolchain-precise-3.8
      - llvm-toolchain-trusty
      - llvm-toolchain-trusty-3.9
      - llvm-toolchain-trusty-4.0
      - llvm-toolchain-trusty-5.0

compiler: gcc
os: linux

matrix:
  exclude:
    - env: TRAVIS_EMPTY_JOB_WORKAROUND=true

  include:
    # GCC MinGW 32 with deployment
    - env: COMPILER='g++' LDFLAGS='-static-libgcc -static-libstdc++' MXE_TARGET='i686-w64-mingw32.static' NATIVE="win32" WINE='wine' BUILD_EXTRA="TILES=1 SOUND=1 LUA=1 LOCALIZE=1 LANGUAGES=all" DEPLOY=1 BUILD_TYPE="win-tiles32"
      compiler: gcc
      sudo: required
      addons: &gcc
        apt:
          packages: ["wine", "lua5.2", "liblua5.2-dev", "astyle"]

    # GCC MinGW 64 with deployment
    - env: COMPILER='g++' LDFLAGS='-static-libgcc -static-libstdc++' MXE_TARGET='x86_64-w64-mingw32.static' NATIVE="win64" WINE='wine' BUILD_EXTRA="TILES=1 SOUND=1 LUA=1 LOCALIZE=1 LANGUAGES=all" DEPLOY=1 BUILD_TYPE="win-tiles64"
      compiler: gcc
      sudo: required
      addons: &gcc
        apt:
          packages: ["wine", "lua5.2", "liblua5.2-dev", "astyle"]

    # GCC 4.8 with deployment, Linux 32 tiles
    - env: COMPILER=g++-4.8 BUILD_EXTRA="TILES=1 SOUND=1 LUA=1 LOCALIZE=1 LANGUAGES=all NATIVE=linux32" DEPLOY=1 BUILD_TYPE="lin-tiles32"
      compiler: gcc
      addons: &gcc48
        apt:
          packages: ["g++-4.8", "g++-4.8-multilib", "libc6-dbg", "libc6-dbg:i386", "lua5.2", "liblua5.2-dev", "astyle", "libsdl2-dev", "libsdl2-gfx-dev", "libsdl2-image-dev", "libsdl2-mixer-dev", "libsdl2-ttf-dev", "libfreetype6-dev"]
          sources: *apt_sources

    # GCC 4.8 with deployment, Linux 32 curses
    - env: COMPILER=g++-4.8 BUILD_EXTRA="LUA=1 LOCALIZE=1 LANGUAGES=all NATIVE=linux32" DEPLOY=1 BUILD_TYPE="lin-curses32"
      compiler: gcc
      addons: &gcc48
        apt:
          packages: ["g++-4.8", "g++-4.8-multilib", "libc6-dbg", "libc6-dbg:i386", "lua5.2", "liblua5.2-dev", "astyle"]
          sources: *apt_sources

    # GCC 4.8 with deployment, Linux 64 tiles
    - env: COMPILER=g++-4.8 BUILD_EXTRA="TILES=1 SOUND=1 LUA=1 LOCALIZE=1 LANGUAGES=all NATIVE=linux64" DEPLOY=1 BUILD_TYPE="lin-tiles64"
      compiler: gcc
      addons: &gcc48
        apt:
          packages: ["g++-4.8", "g++-4.8-multilib", "libc6-dbg", "lua5.2", "liblua5.2-dev", "astyle", "libsdl2-dev", "libsdl2-gfx-dev", "libsdl2-image-dev", "libsdl2-mixer-dev", "libsdl2-ttf-dev", "libfreetype6-dev"]
          sources: *apt_sources

    # GCC 4.8 with deployment, Linux 64 curses
    - env: COMPILER=g++-4.8 BUILD_EXTRA="LUA=1 LOCALIZE=1 LANGUAGES=all NATIVE=linux64" DEPLOY=1 BUILD_TYPE="lin-curses64"
      compiler: gcc
      addons: &gcc48
        apt:
          packages: ["g++-4.8", "g++-4.8-multilib", "libc6-dbg", "lua5.2", "liblua5.2-dev", "astyle"]
          sources: *apt_sources

    # coverage
    - env: COMPILER=g++-4.8 CODE_COVERAGE=true
      compiler: gcc
      addons: &gcc48
        apt:
          packages: ["g++-4.8", "g++-4.8-multilib", "libc6-dbg", "libc6-dbg:i386", "lcov", "astyle"]
          sources: *apt_sources

    # GCC 4.8
    - env: COMPILER=g++-4.8
      compiler: gcc
      addons: &gcc48
        apt:
          packages: ["g++-4.8", "g++-4.8-multilib", "libc6-dbg", "libc6-dbg:i386"]
          sources: *apt_sources

    # GCC 4.9
    - env: COMPILER=g++-4.9
      compiler: gcc
      addons: &gcc49
        apt:
          packages: ["g++-4.9", "g++-4.9-multilib", "libc6-dbg", "libc6-dbg:i386"]
          sources: *apt_sources

    # GCC 5
    - env: COMPILER=g++-5
      compiler: gcc
      addons: &gcc5
        apt:
          packages: ["g++-5",   "g++-5-multilib",   "libc6-dbg", "libc6-dbg:i386"]
          sources: *apt_sources

    # GCC 6
    - env: COMPILER=g++-6
      compiler: gcc
      addons: &gcc6
        apt:
          packages: ["g++-6",   "g++-6-multilib",   "libc6-dbg", "libc6-dbg:i386"]
          sources: *apt_sources

    # GCC MinGW
    - env: COMPILER='g++' LDFLAGS='-static-libgcc -static-libstdc++' MXE_TARGET='i686-w64-mingw32.static' WINE='wine'
      compiler: gcc
      sudo: required
      addons: &gcc
        apt:
          packages: ["wine"]

    # Clang 3.8
    - env: CLANG=clang++-3.8 CXXFLAGS='-Wno-error=unused-command-line-argument -D__extern_always_inline="extern __always_inline"'
      addons: &clang38
        apt:
          packages: ["clang-3.8", "g++-multilib", "libc6-dbg", "libc6-dbg:i386", "g++-6"]
          sources: *apt_sources

    # Clang 3.9
    - env: CLANG=clang++-3.9 CXXFLAGS='-Wno-error=unused-command-line-argument -D__extern_always_inline="extern __always_inline"'
      addons: &clang39
        apt:
          packages: ["clang-3.9", "g++-multilib", "libc6-dbg", "libc6-dbg:i386", "g++-6"]
          sources: *apt_sources

    # Clang 4.0
    - env: CLANG=clang++-4.0 CXXFLAGS=-Wno-error=unused-command-line-argument
      dist: trusty
      addons: &clang40
        apt:
          packages: ["clang-4.0", "g++-multilib", "libc6-dbg", "libc6-dbg:i386", "g++-6"]
          sources: *apt_sources

    # Clang 5.0
    - env: CLANG=clang++-5.0 CXXFLAGS=-Wno-error=unused-command-line-argument
      dist: trusty
      addons: &clang50
        apt:
          packages: ["clang-5.0", "g++-multilib", "libc6-dbg", "libc6-dbg:i386", "g++-6"]
          sources: *apt_sources

before_script:
  - if [ -n "${CLANG}" ]; then COMPILER="$CLANG"; fi
  - ${COMPILER} --version
  - export VER="cth-${BUILD_TYPE}-${TRAVIS_BUILD_NUMBER}"
  - source build-scripts/requirements.sh

script: make -j3 CCACHE=1 RELEASE=1 CROSS="$CROSS_COMPILATION" VERSION="${VER}" $BUILD_EXTRA && $WINE ./tests/cata_test

after_success:
  - if [ -n "${CODE_COVERAGE}" ]; then coveralls -b . -i src -e tests --gcov /usr/bin/gcov-4.8; fi
  - if [ -n "${CODE_COVERAGE}" ]; then bash <(curl -s https://codecov.io/bash); fi

before_deploy:
  - make -j3 CCACHE=1 RELEASE=1 CROSS="$CROSS_COMPILATION" VERSION="${VER}" $BUILD_EXTRA bindist && export RELEASE_PKG_FILES=$(ls *.zip *.tar.gz)

deploy:
  provider: releases
  api_key:
    secure: yHikOGBqrnD9DVKVTE357zU4FomF2HYutWQZLTo2wTRaitnos9hhYGFW0+HSQdNRMvj0HcNFuCbkFZGuKPztKNzH84lFubWjzQb3OLKnp5aCtdl/wm/MnXJeY7T7kEPqgalyP+PFPoNXpjcicrbliaZFRqX2PcFMpPFXRh18/zbm+8dNsgkdtmEgsEDYKQRkQeOJ87kgPji3AjQGTzWa184bk4dbohpLWT21GwguNiZ2+8QoRVjDF6bqH1PZer/Ap4b8pIBvpLe+52/4NYOvS27MbOmfxzn5oZ3aGzZamrwkhiOLfKiKqDeF8Ih7NdC3TwJnrL+PybGUSVgDgJl97lowo/sywSg7p2GhQ0OJOKw5/oiGkAlkTrwFgdUR6c+FUWOZnIEIgGtN12u4xvQn5kBBRq4W5muXHjWandAZ8iNyWqcZ7vqvhUGp0Dj1vvRWVvtktjdpBbYVNt3tNMEx/y62yz+2HiSjBnWSjnSskIg8wLq7a9nTa6Gragu6D/WcR1IXwnLc2dYvG9rj6Zpow5aZrqMieYSmQBML/9bKo2MY219R6FXdjJjTBi56ZP6r1nAL2LUjyOmlV4epP7oyp5Kq1t+deO7rwsq1RaLHkRi9JYYX90OjPsFZCn6xBGb4+IHUbGblr9PQ7cfjmX31o1zw+lThB9Zp0jeEsRvxIdI=
  file_glob: true
  file: ${RELEASE_PKG_FILES}
  skip_cleanup: true
  on:
    branch: experimental
    tags: true
    condition: $DEPLOY = '1'
